"use strict";function load_macrocell(e,t){let s=t.split("\n");if(!s[0].startsWith("[M2]"))return;let r=0;for(let l=1;l<s.length;l++)if("#"!==s[l][0]){r=l;break}if(!r)return;let a=[];a[0]=void 0;for(let $=r;$<s.length;$++){let n=s[$],i=n[0];if("$"===i||"."===i||"*"===i){let p=[],h=[],u=0,f=0;for(let o=0;o<n.length;o++){let _=n[o];"$"===_?(u=0,f++,console.assert(f<=8,"x")):"."===_?(u++,console.assert(u<=8,"y")):"*"===_?(p.push(u),h.push(f),u++):"\r"===_||console.assert(!1,"Unexpected piece: '"+_+"'")}let c=e.setup_field_recurse(0,p.length-1,p,h,3);a.push(c)}else if(""===n);else{let g=n.split(" ");console.assert(5===g.length,"length");let[m,d,y,x,b]=g;m=+m,d=+d,y=+y,x=+x,b=+b,console.assert(m>=4),console.assert(d>=0),console.assert(y>=0),console.assert(x>=0),console.assert(b>=0);let v=0===d?e.empty_tree(m-1):a[d],k=0===y?e.empty_tree(m-1):a[y],M=0===x?e.empty_tree(m-1):a[x],O=0===b?e.empty_tree(m-1):a[b];console.assert(v.level===m-1),console.assert(v),console.assert(k),console.assert(M),console.assert(O);let U=e.create_tree(v,k,M,O);a.push(U)}}return e.root=a[a.length-1],formats.parse_comments(t.substr(t.indexOf("\n")+1),"#")}